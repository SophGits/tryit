0 info it worked if it ends with ok
1 verbose cli [ 'node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   '-g',
1 verbose cli   'install',
1 verbose cli   'request',
1 verbose cli   'cheerio' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose cache add [ 'request', null ]
5 verbose cache add name=undefined spec="request" args=["request",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'request',
6 verbose parsed url   path: 'request',
6 verbose parsed url   href: 'request' }
7 verbose cache add [ 'cheerio', null ]
8 verbose cache add name=undefined spec="cheerio" args=["cheerio",null]
9 verbose parsed url { protocol: null,
9 verbose parsed url   slashes: null,
9 verbose parsed url   auth: null,
9 verbose parsed url   host: null,
9 verbose parsed url   port: null,
9 verbose parsed url   hostname: null,
9 verbose parsed url   hash: null,
9 verbose parsed url   search: null,
9 verbose parsed url   query: null,
9 verbose parsed url   pathname: 'cheerio',
9 verbose parsed url   path: 'cheerio',
9 verbose parsed url   href: 'cheerio' }
10 silly lockFile 088e29b0-request request
11 verbose lock request /Users/Sophie/.npm/088e29b0-request.lock
12 silly lockFile efb58830-cheerio cheerio
13 verbose lock cheerio /Users/Sophie/.npm/efb58830-cheerio.lock
14 silly lockFile 088e29b0-request request
15 silly lockFile 088e29b0-request request
16 silly lockFile efb58830-cheerio cheerio
17 silly lockFile efb58830-cheerio cheerio
18 verbose addNamed [ 'request', '' ]
19 verbose addNamed [ null, '*' ]
20 silly lockFile 9d461bcf-request request@
21 verbose lock request@ /Users/Sophie/.npm/9d461bcf-request.lock
22 verbose addNamed [ 'cheerio', '' ]
23 verbose addNamed [ null, '*' ]
24 silly lockFile 8cd5cc09-cheerio cheerio@
25 verbose lock cheerio@ /Users/Sophie/.npm/8cd5cc09-cheerio.lock
26 silly addNameRange { name: 'request', range: '*', hasData: false }
27 silly addNameRange { name: 'cheerio', range: '*', hasData: false }
28 verbose url raw request
29 verbose url resolving [ 'https://registry.npmjs.org/', './request' ]
30 verbose url resolved https://registry.npmjs.org/request
31 info trying registry request attempt 1 at 18:16:28
32 verbose etag "6CWP5S5RUVXE36N6LHWTDA7BQ"
33 http GET https://registry.npmjs.org/request
34 verbose url raw cheerio
35 verbose url resolving [ 'https://registry.npmjs.org/', './cheerio' ]
36 verbose url resolved https://registry.npmjs.org/cheerio
37 info trying registry request attempt 1 at 18:16:28
38 verbose etag "CS38E0TQ5BDC9ZN7H1MDKE5X2"
39 http GET https://registry.npmjs.org/cheerio
40 http 304 https://registry.npmjs.org/request
41 silly registry.get cb [ 304,
41 silly registry.get   { date: 'Sun, 31 Aug 2014 17:16:30 GMT',
41 silly registry.get     server: 'Apache',
41 silly registry.get     via: '1.1 varnish',
41 silly registry.get     'last-modified': 'Sun, 31 Aug 2014 17:16:30 GMT',
41 silly registry.get     'cache-control': 'max-age=60',
41 silly registry.get     etag: '"6CWP5S5RUVXE36N6LHWTDA7BQ"',
41 silly registry.get     'x-served-by': 'cache-lcy1123-LCY',
41 silly registry.get     'x-cache': 'HIT',
41 silly registry.get     'x-cache-hits': '1',
41 silly registry.get     'x-timer': 'S1409505390.623051,VS0,VE0',
41 silly registry.get     vary: 'Accept',
41 silly registry.get     'content-length': '0',
41 silly registry.get     'keep-alive': 'timeout=10, max=50',
41 silly registry.get     connection: 'Keep-Alive' } ]
42 verbose etag request from cache
43 http 304 https://registry.npmjs.org/cheerio
44 silly registry.get cb [ 304,
44 silly registry.get   { date: 'Sun, 31 Aug 2014 17:16:30 GMT',
44 silly registry.get     server: 'Apache',
44 silly registry.get     via: '1.1 varnish',
44 silly registry.get     'last-modified': 'Sun, 31 Aug 2014 17:16:30 GMT',
44 silly registry.get     'cache-control': 'max-age=60',
44 silly registry.get     etag: '"CS38E0TQ5BDC9ZN7H1MDKE5X2"',
44 silly registry.get     'x-served-by': 'cache-lcy1123-LCY',
44 silly registry.get     'x-cache': 'HIT',
44 silly registry.get     'x-cache-hits': '1',
44 silly registry.get     'x-timer': 'S1409505390.627749,VS0,VE0',
44 silly registry.get     vary: 'Accept',
44 silly registry.get     'content-length': '0',
44 silly registry.get     'keep-alive': 'timeout=10, max=50',
44 silly registry.get     connection: 'Keep-Alive' } ]
45 verbose etag cheerio from cache
46 silly addNameRange number 2 { name: 'request', range: '*', hasData: true }
47 silly addNameRange versions [ 'request',
47 silly addNameRange   [ '0.10.0',
47 silly addNameRange     '0.8.3',
47 silly addNameRange     '0.9.0',
47 silly addNameRange     '0.9.1',
47 silly addNameRange     '0.9.5',
47 silly addNameRange     '1.0.0',
47 silly addNameRange     '1.1.0',
47 silly addNameRange     '1.1.1',
47 silly addNameRange     '1.2.0',
47 silly addNameRange     '1.9.0',
47 silly addNameRange     '1.9.1',
47 silly addNameRange     '1.9.2',
47 silly addNameRange     '1.9.3',
47 silly addNameRange     '1.9.5',
47 silly addNameRange     '1.9.7',
47 silly addNameRange     '1.9.8',
47 silly addNameRange     '1.9.9',
47 silly addNameRange     '2.0.0',
47 silly addNameRange     '2.0.1',
47 silly addNameRange     '2.0.2',
47 silly addNameRange     '2.0.3',
47 silly addNameRange     '2.0.4',
47 silly addNameRange     '2.0.5',
47 silly addNameRange     '2.1.0',
47 silly addNameRange     '2.1.1',
47 silly addNameRange     '2.2.0',
47 silly addNameRange     '2.2.5',
47 silly addNameRange     '2.2.6',
47 silly addNameRange     '2.2.9',
47 silly addNameRange     '2.9.0',
47 silly addNameRange     '2.9.1',
47 silly addNameRange     '2.9.2',
47 silly addNameRange     '2.9.3',
47 silly addNameRange     '2.9.100',
47 silly addNameRange     '2.9.150',
47 silly addNameRange     '2.9.151',
47 silly addNameRange     '2.9.152',
47 silly addNameRange     '2.9.153',
47 silly addNameRange     '2.9.200',
47 silly addNameRange     '2.9.201',
47 silly addNameRange     '2.9.202',
47 silly addNameRange     '2.9.203',
47 silly addNameRange     '2.10.0',
47 silly addNameRange     '2.11.0',
47 silly addNameRange     '2.11.1',
47 silly addNameRange     '2.11.2',
47 silly addNameRange     '2.11.3',
47 silly addNameRange     '2.11.4',
47 silly addNameRange     '2.12.0',
47 silly addNameRange     '2.14.0',
47 silly addNameRange     '2.16.0',
47 silly addNameRange     '2.16.2',
47 silly addNameRange     '2.16.4',
47 silly addNameRange     '2.16.6',
47 silly addNameRange     '2.18.0',
47 silly addNameRange     '2.19.0',
47 silly addNameRange     '2.20.0',
47 silly addNameRange     '2.21.0',
47 silly addNameRange     '2.22.0',
47 silly addNameRange     '2.23.0',
47 silly addNameRange     '2.24.0',
47 silly addNameRange     '2.25.0',
47 silly addNameRange     '2.26.0',
47 silly addNameRange     '2.27.0',
47 silly addNameRange     '2.28.0',
47 silly addNameRange     '2.29.0',
47 silly addNameRange     '2.30.0',
47 silly addNameRange     '2.31.0',
47 silly addNameRange     '2.32.0',
47 silly addNameRange     '2.33.0',
47 silly addNameRange     '2.34.0',
47 silly addNameRange     '2.35.0',
47 silly addNameRange     '2.36.0',
47 silly addNameRange     '2.37.0',
47 silly addNameRange     '2.38.0',
47 silly addNameRange     '2.39.0',
47 silly addNameRange     '2.40.0' ] ]
48 verbose addNamed [ 'request', '2.40.0' ]
49 verbose addNamed [ '2.40.0', '2.40.0' ]
50 silly lockFile 8bc988e5-request-2-40-0 request@2.40.0
51 verbose lock request@2.40.0 /Users/Sophie/.npm/8bc988e5-request-2-40-0.lock
52 silly addNameRange number 2 { name: 'cheerio', range: '*', hasData: true }
53 silly addNameRange versions [ 'cheerio',
53 silly addNameRange   [ '0.0.1',
53 silly addNameRange     '0.0.2',
53 silly addNameRange     '0.0.3',
53 silly addNameRange     '0.0.4',
53 silly addNameRange     '0.1.1',
53 silly addNameRange     '0.1.2',
53 silly addNameRange     '0.1.3',
53 silly addNameRange     '0.1.4',
53 silly addNameRange     '0.1.5',
53 silly addNameRange     '0.2.0',
53 silly addNameRange     '0.2.1',
53 silly addNameRange     '0.2.2',
53 silly addNameRange     '0.3.0',
53 silly addNameRange     '0.3.1',
53 silly addNameRange     '0.3.2',
53 silly addNameRange     '0.4.0',
53 silly addNameRange     '0.4.1',
53 silly addNameRange     '0.4.2',
53 silly addNameRange     '0.5.0',
53 silly addNameRange     '0.5.1',
53 silly addNameRange     '0.5.2',
53 silly addNameRange     '0.6.0',
53 silly addNameRange     '0.6.1',
53 silly addNameRange     '0.6.2',
53 silly addNameRange     '0.7.0',
53 silly addNameRange     '0.8.0',
53 silly addNameRange     '0.8.1',
53 silly addNameRange     '0.8.2',
53 silly addNameRange     '0.8.3',
53 silly addNameRange     '0.9.0',
53 silly addNameRange     '0.9.1',
53 silly addNameRange     '0.9.2',
53 silly addNameRange     '0.10.0',
53 silly addNameRange     '0.10.1',
53 silly addNameRange     '0.10.2',
53 silly addNameRange     '0.10.3',
53 silly addNameRange     '0.10.4',
53 silly addNameRange     '0.10.5',
53 silly addNameRange     '0.10.6',
53 silly addNameRange     '0.10.7',
53 silly addNameRange     '0.10.8',
53 silly addNameRange     '0.11.0',
53 silly addNameRange     '0.12.0',
53 silly addNameRange     '0.12.1',
53 silly addNameRange     '0.12.2',
53 silly addNameRange     '0.12.3',
53 silly addNameRange     '0.12.4',
53 silly addNameRange     '0.13.0',
53 silly addNameRange     '0.13.1',
53 silly addNameRange     '0.14.0',
53 silly addNameRange     '0.15.0',
53 silly addNameRange     '0.16.0',
53 silly addNameRange     '0.17.0' ] ]
54 verbose addNamed [ 'cheerio', '0.17.0' ]
55 verbose addNamed [ '0.17.0', '0.17.0' ]
56 silly lockFile 26cb7f10-cheerio-0-17-0 cheerio@0.17.0
57 verbose lock cheerio@0.17.0 /Users/Sophie/.npm/26cb7f10-cheerio-0-17-0.lock
58 silly lockFile 8bc988e5-request-2-40-0 request@2.40.0
59 silly lockFile 8bc988e5-request-2-40-0 request@2.40.0
60 silly lockFile 26cb7f10-cheerio-0-17-0 cheerio@0.17.0
61 silly lockFile 26cb7f10-cheerio-0-17-0 cheerio@0.17.0
62 silly lockFile 9d461bcf-request request@
63 silly lockFile 9d461bcf-request request@
64 silly lockFile 8cd5cc09-cheerio cheerio@
65 silly lockFile 8cd5cc09-cheerio cheerio@
66 silly resolved [ { name: 'request',
66 silly resolved     description: 'Simplified HTTP request client.',
66 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
66 silly resolved     version: '2.40.0',
66 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
66 silly resolved     repository: { type: 'git', url: 'https://github.com/mikeal/request.git' },
66 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
66 silly resolved     license: 'Apache-2.0',
66 silly resolved     engines: [ 'node >= 0.8.0' ],
66 silly resolved     main: 'index.js',
66 silly resolved     dependencies:
66 silly resolved      { qs: '~1.0.0',
66 silly resolved        'json-stringify-safe': '~5.0.0',
66 silly resolved        'mime-types': '~1.0.1',
66 silly resolved        'forever-agent': '~0.5.0',
66 silly resolved        'node-uuid': '~1.4.0',
66 silly resolved        'tough-cookie': '>=0.12.0',
66 silly resolved        'form-data': '~0.1.0',
66 silly resolved        'tunnel-agent': '~0.4.0',
66 silly resolved        'http-signature': '~0.10.0',
66 silly resolved        'oauth-sign': '~0.3.0',
66 silly resolved        hawk: '1.1.1',
66 silly resolved        'aws-sign2': '~0.5.0',
66 silly resolved        stringstream: '~0.0.4' },
66 silly resolved     optionalDependencies:
66 silly resolved      { 'tough-cookie': '>=0.12.0',
66 silly resolved        'form-data': '~0.1.0',
66 silly resolved        'tunnel-agent': '~0.4.0',
66 silly resolved        'http-signature': '~0.10.0',
66 silly resolved        'oauth-sign': '~0.3.0',
66 silly resolved        hawk: '1.1.1',
66 silly resolved        'aws-sign2': '~0.5.0',
66 silly resolved        stringstream: '~0.0.4' },
66 silly resolved     scripts: { test: 'node tests/run.js' },
66 silly resolved     readme: '# Request — Simplified HTTP client\n\n[![NPM](https://nodei.co/npm/request.png)](https://nodei.co/npm/request/)\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don’t already provide one).\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let’s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since `pipe()` returns the destination stream in ≥ Node 0.5.x you can do one line proxying. :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## UNIX Socket \n\n`request` supports the `unix://` protocol for all requests. The path is assumed to be absolute to the root of the host file system. \n\nHTTP paths are extracted from the supplied URL by testing each level of the full URL against net.connect for a socket response.\n\nThus the following request will GET `/httppath` from the HTTP server listening on `/tmp/unix.socket`\n\n```javascript\nrequest.get(\'unix://tmp/unix.socket/httppath\')\n```\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nURL-encoded forms are simple.\n\n```javascript\nrequest.post(\'http://service.com/upload\', {form:{key:\'value\'}})\n// or\nrequest.post(\'http://service.com/upload\').form({key:\'value\'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don’t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post(\'http://service.com/upload\', function optionalCallback (err, httpResponse, body) {\n  if (err) {\n    return console.error(\'upload failed:\', err);\n  }\n  console.log(\'Upload successful!  Server responded with:\', body);\n})\nvar form = r.form()\nform.append(\'my_field\', \'my_value\')\nform.append(\'my_buffer\', new Buffer([1, 2, 3]))\nform.append(\'my_file\', fs.createReadStream(path.join(__dirname, \'doodle.png\')))\nform.append(\'remote_file\', request(\'http://google.com/doodle.png\'))\n\n// Just like always, `r` is a writable stream, and can be used as such (you have until nextTick to pipe it, etc.)\n// Alternatively, you can provide a callback (that\'s what this example does — see `optionalCallback` above).\n```\n\n## HTTP Authentication\n\n```javascript\nrequest.get(\'http://some.server.com/\').auth(\'username\', \'password\', false);\n// or\nrequest.get(\'http://some.server.com/\', {\n  \'auth\': {\n    \'user\': \'username\',\n    \'pass\': \'password\',\n    \'sendImmediately\': false\n  }\n});\n// or\nrequest.get(\'http://some.server.com/\').auth(null, null, true, \'bearerToken\');\n// or\nrequest.get(\'http://some.server.com/\', {\n  \'auth\': {\n    \'bearer\': \'bearerToken\'\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values `user` || `username`, `pass` || `password`, and `sendImmediately` (optional).  The method form takes parameters `auth(username, password, sendImmediately)`.\n\n`sendImmediately` defaults to `true`, which causes a basic authentication header to be sent.  If `sendImmediately` is `false`, then `request` will retry with a proper authentication header after receiving a `401` response from the server (which must contain a `WWW-Authenticate` header indicating the required authentication method).\n\nNote that you can also use for basic authentication a trick using the URL itself, as specified in [RFC 1738](http://www.ietf.org/rfc/rfc1738.txt). \nSimply pass the `user:password` before the host with an `@` sign.\n\n```javascript\nvar username = \'username\',\n    password = \'password\',\n    url = \'http://\' + username + \':\' + password + \'@some.server.com\';\n\nrequest({url: url}, function (error, response, body) {\n   // Do more stuff with \'body\' here\n});\n```\n\nDigest authentication is supported, but it only works with `sendImmediately` set to `false`; otherwise `request` will send basic authentication on the initial request, which will probably cause the request to fail.\n\nBearer authentication is supported, and is activated when the `bearer` value is available. The value may be either a `String` or a `Function` returning a `String`. Using a function to supply the bearer token is particularly useful if used in conjuction with `defaults` to allow a single function to supply the last known token at the time or sending a request or to compute one on the fly.\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n  var access_token = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: access_token.oauth_verifier\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1.1/users/show.json?\'\n      , params =\n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n### Custom HTTP Headers\n\nHTTP Headers, such as `User-Agent`, can be set in the `options` object.\nIn the example below, we call the github API to find out the number\nof stars and forks for the request repository. This requires a\ncustom `User-Agent` header as well as https.\n\n```javascript\nvar request = require(\'request\');\n\nvar options = {\n\turl: \'https://api.github.com/repos/mikeal/request\',\n\theaders: {\n\t\t\'User-Agent\': \'request\'\n\t}\n};\n\nfunction callback(error, response, body) {\n\tif (!error && response.statusCode == 200) {\n\t\tvar info = JSON.parse(body);\n\t\tconsole.log(info.stargazers_count + " Stars");\n\t\tconsole.log(info.forks_count + " Forks");\n\t}\n}\n\nrequest(options, callback);\n```\n\n### request(options, callback)\n\nThe first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`\n* `qs` - object containing querystring values to be appended to the `uri`\n* `method` - http method (default: `"GET"`)\n* `headers` - http headers (default: `{}`)\n* `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer` or `String`.\n* `form` - when passed an object or a querystring, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no options, a `FormData` instance is returned (and is piped to request).\n* `auth` - A hash containing values `user` || `username`, `pass` || `password`, and `sendImmediately` (optional).  See documentation above.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as JSON.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`)\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)\n* `maxRedirects` - the maximum number of redirects to follow (default: `10`)\n* `encoding` - Encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`.\n* `pool` - A hash object containing the agents for these requests. If omitted, the request will use the global pool (which is set to node\'s default `maxSockets`)\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\n* `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n* `oauth` - Options for OAuth HMAC-SHA1 signing. See documentation above.\n* `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n* `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n* `jar` - If `true` and `tough-cookie` is installed, remember cookies for future use (or define your custom cookie jar; see examples section)\n* `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`. Also requires the property `bucket`, unless you’re specifying your `bucket` as part of the path, or the request doesn’t use a bucket (i.e. GET Services)\n* `httpSignature` - Options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent\'s library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n* `localAddress` - Local interface to bind for network connections.\n* `gzip` - If `true`, add an `Accept-Encoding` header to request compressed content encodings from the server (if not already present) and decode supported content encodings in the response.\n\n\nThe callback argument gets 3 arguments: \n\n1. An `error` when applicable (usually from [`http.ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest) object)\n2. An [`http.IncomingMessage`](http://nodejs.org/api/http.html#http_http_incomingmessage) object\n3. The third is the `response` body (`String` or `Buffer`, or JSON object if the `json` option is supplied)\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)\n\nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as `request()`, but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.patch\n\nSame as `request()`, but defaults to `method: "PATCH"`.\n\n```javascript\nrequest.patch(url)\n```\n\n### request.post\n\nSame as `request()`, but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as `request()`, but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nSame as `request()` (for uniformity).\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart:\n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\n\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`) and install `tough-cookie`.\n\n```javascript\nvar request = request.defaults({jar: true})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nTo use a custom cookie jar (instead of `request`’s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nOR\n\n```javascript\n// `npm install --save tough-cookie` before this works\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.setCookie(cookie, uri);\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n\nTo inspect your cookie jar after a request\n\n```javascript\nvar j = request.jar() \nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  var cookie_string = j.getCookieString(uri); // "key1=value1; key2=value2; ..."\n  var cookies = j.getCookies(uri); \n  // [{key: \'key1\', value: \'value1\', domain: "www.google.com", ...}, ...]\n})\n```\n',
66 silly resolved     readmeFilename: 'README.md',
66 silly resolved     homepage: 'https://github.com/mikeal/request',
66 silly resolved     _id: 'request@2.40.0',
66 silly resolved     _from: 'request@' },
66 silly resolved   { name: 'cheerio',
66 silly resolved     version: '0.17.0',
66 silly resolved     description: 'Tiny, fast, and elegant implementation of core jQuery designed specifically for the server',
66 silly resolved     author:
66 silly resolved      { name: 'Matt Mueller',
66 silly resolved        email: 'mattmuelle@gmail.com',
66 silly resolved        url: 'mat.io' },
66 silly resolved     keywords: [ 'htmlparser', 'jquery', 'selector', 'scraper', 'parser', 'html' ],
66 silly resolved     repository:
66 silly resolved      { type: 'git',
66 silly resolved        url: 'git://github.com/MatthewMueller/cheerio.git' },
66 silly resolved     main: './index.js',
66 silly resolved     engines: { node: '>= 0.6' },
66 silly resolved     dependencies:
66 silly resolved      { CSSselect: '~0.4.0',
66 silly resolved        entities: '~1.1.1',
66 silly resolved        htmlparser2: '~3.7.2',
66 silly resolved        'dom-serializer': '~0.0.0',
66 silly resolved        lodash: '~2.4.1' },
66 silly resolved     devDependencies:
66 silly resolved      { benchmark: '~1.0.0',
66 silly resolved        'expect.js': '~0.3.1',
66 silly resolved        jsdom: '~0.8.9',
66 silly resolved        jshint: '~2.3.0',
66 silly resolved        mocha: '*',
66 silly resolved        xyz: '~0.3.0' },
66 silly resolved     scripts: { test: 'make test' },
66 silly resolved     readme: '# cheerio [![Build Status](https://secure.travis-ci.org/cheeriojs/cheerio.svg?branch=master)](http://travis-ci.org/cheeriojs/cheerio)\n\nFast, flexible, and lean implementation of core jQuery designed specifically for the server.\n\n## Introduction\nTeach your server HTML.\n\n```js\nvar cheerio = require(\'cheerio\'),\n    $ = cheerio.load(\'<h2 class="title">Hello world</h2>\');\n\n$(\'h2.title\').text(\'Hello there!\');\n$(\'h2\').addClass(\'welcome\');\n\n$.html();\n//=> <h2 class="title welcome">Hello there!</h2>\n```\n\n## Installation\n`npm install cheerio`\n\n## Features\n__&#10084; Familiar syntax:__\nCheerio implements a subset of core jQuery. Cheerio removes all the DOM inconsistencies and browser cruft from the jQuery library, revealing its truly gorgeous API.\n\n__&#991; Blazingly fast:__\nCheerio works with a very simple, consistent DOM model. As a result parsing, manipulating, and rendering are incredibly efficient. Preliminary end-to-end benchmarks suggest that cheerio is about __8x__ faster than JSDOM.\n\n__&#10049; Incredibly flexible:__\nCheerio wraps around @FB55\'s forgiving [htmlparser2](https://github.com/fb55/htmlparser2/). Cheerio can parse nearly any HTML or XML document.\n\n## What about JSDOM?\nI wrote cheerio because I found myself increasingly frustrated with JSDOM. For me, there were three main sticking points that I kept running into again and again:\n\n__&#8226; JSDOM\'s built-in parser is too strict:__\n  JSDOM\'s bundled HTML parser cannot handle many popular sites out there today.\n\n__&#8226; JSDOM is too slow:__\nParsing big websites with JSDOM has a noticeable delay.\n\n__&#8226; JSDOM feels too heavy:__\nThe goal of JSDOM is to provide an identical DOM environment as what we see in the browser. I never really needed all this, I just wanted a simple, familiar way to do HTML manipulation.\n\n## When I would use JSDOM\n\nCheerio will not solve all your problems. I would still use JSDOM if I needed to work in a browser-like environment on the server, particularly if I wanted to automate functional tests.\n\n## API\n\n### Markup example we\'ll be using:\n\n```html\n<ul id="fruits">\n  <li class="apple">Apple</li>\n  <li class="orange">Orange</li>\n  <li class="pear">Pear</li>\n</ul>\n```\n\nThis is the HTML markup we will be using in all of the API examples.\n\n### Loading\nFirst you need to load in the HTML. This step in jQuery is implicit, since jQuery operates on the one, baked-in DOM. With Cheerio, we need to pass in the HTML document.\n\nThis is the _preferred_ method:\n\n```js\nvar cheerio = require(\'cheerio\'),\n    $ = cheerio.load(\'<ul id="fruits">...</ul>\');\n```\n\nOptionally, you can also load in the HTML by passing the string as the context:\n\n```js\n$ = require(\'cheerio\');\n$(\'ul\', \'<ul id="fruits">...</ul>\');\n```\n\nOr as the root:\n\n```js\n$ = require(\'cheerio\');\n$(\'li\', \'ul\', \'<ul id="fruits">...</ul>\');\n```\n\nYou can also pass an extra object to `.load()` if you need to modify any\nof the default parsing options:\n\n```js\n$ = cheerio.load(\'<ul id="fruits">...</ul>\', {\n    normalizeWhitespace: true,\n    xmlMode: true\n});\n```\n\nThese parsing options are taken directly from [htmlparser2](https://github.com/fb55/htmlparser2/wiki/Parser-options), therefore any options that can be used in `htmlparser2` are valid in cheerio as well. The default options are:\n\n```js\n{\n    normalizeWhitespace: false,\n    xmlMode: false,\n    decodeEntities: true\n}\n\n```\n\nFor a full list of options and their effects, see [this](https://github.com/fb55/DomHandler) and\n[htmlparser2\'s options](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\n### Selectors\n\nCheerio\'s selector implementation is nearly identical to jQuery\'s, so the API is very similar.\n\n#### $( selector, [context], [root] )\n`selector` searches within the `context` scope which searches within the `root` scope. `selector` and `context` can be an string expression, DOM Element, array of DOM elements, or cheerio object. `root` is typically the HTML document string.\n\nThis selector method is the starting point for traversing and manipulating the document. Like jQuery, it\'s the primary method for selecting elements in the document, but unlike jQuery it\'s built on top of the CSSSelect library, which implements most of the Sizzle selectors.\n\n```js\n$(\'.apple\', \'#fruits\').text()\n//=> Apple\n\n$(\'ul .pear\').attr(\'class\')\n//=> pear\n\n$(\'li[class=orange]\').html()\n//=> <li class="orange">Orange</li>\n```\n\n### Attributes\nMethods for getting and modifying attributes.\n\n#### .attr( name, value )\nMethod for getting and setting attributes. Gets the attribute value for only the first element in the matched set. If you set an attribute\'s value to `null`, you remove that attribute. You may also pass a `map` and `function` like jQuery.\n\n```js\n$(\'ul\').attr(\'id\')\n//=> fruits\n\n$(\'.apple\').attr(\'id\', \'favorite\').html()\n//=> <li class="apple" id="favorite">Apple</li>\n```\n\n> See http://api.jquery.com/attr/ for more information\n\n#### .data( name, value )\nMethod for getting and setting data attributes. Gets or sets the data attribute value for only the first element in the matched set.\n\n```js\n$(\'<div data-apple-color="red"></div>\').data()\n//=> { appleColor: \'red\' }\n\n$(\'<div data-apple-color="red"></div>\').data(\'data-apple-color\')\n//=> \'red\'\n\nvar apple = $(\'.apple\').data(\'kind\', \'mac\')\napple.data(\'kind\')\n//=> \'mac\'\n```\n\n> See http://api.jquery.com/data/ for more information\n\n#### .val( [value] )\nMethod for getting and setting the value of input, select, and textarea. Note: Support for `map`, and `function` has not been added yet.\n\n```js\n$(\'input[type="text"]\').val()\n//=> input_text\n\n$(\'input[type="text"]\').val(\'test\').html()\n//=> <input type="text" value="test"/>\n```\n\n#### .removeAttr( name )\nMethod for removing attributes by `name`.\n\n```js\n$(\'.pear\').removeAttr(\'class\').html()\n//=> <li>Pear</li>\n```\n\n#### .hasClass( className )\nCheck to see if *any* of the matched elements have the given `className`.\n\n```js\n$(\'.pear\').hasClass(\'pear\')\n//=> true\n\n$(\'apple\').hasClass(\'fruit\')\n//=> false\n\n$(\'li\').hasClass(\'pear\')\n//=> true\n```\n\n#### .addClass( className )\nAdds class(es) to all of the matched elements. Also accepts a `function` like jQuery.\n\n```js\n$(\'.pear\').addClass(\'fruit\').html()\n//=> <li class="pear fruit">Pear</li>\n\n$(\'.apple\').addClass(\'fruit red\').html()\n//=> <li class="apple fruit red">Apple</li>\n```\n\n> See http://api.jquery.com/addClass/ for more information.\n\n#### .removeClass( [className] )\nRemoves one or more space-separated classes from the selected elements. If no `className` is defined, all classes will be removed. Also accepts a `function` like jQuery.\n\n```js\n$(\'.pear\').removeClass(\'pear\').html()\n//=> <li class="">Pear</li>\n\n$(\'.apple\').addClass(\'red\').removeClass().html()\n//=> <li class="">Apple</li>\n```\n\n> See http://api.jquery.com/removeClass/ for more information.\n\n#### .toggleClass( className, [switch] )\nAdd or remove class(es) from the matched elements, depending on either the class\'s presence or the value of the switch argument. Also accepts a `function` like jQuery.\n\n```js\n$(\'.apple.green\').toggleClass(\'fruit green red\').html()\n//=> <li class="apple fruit red">Apple</li>\n\n$(\'.apple.green\').toggleClass(\'fruit green red\', true).html()\n//=> <li class="apple green fruit red">Apple</li>\n```\n\n> See http://api.jquery.com/toggleClass/ for more information.\n\n#### .is( selector )\n#### .is( element )\n#### .is( selection )\n#### .is( function(index) )\nChecks the current list of elements and returns `true` if _any_ of the elements match the selector. If using an element or Cheerio selection, returns `true` if _any_ of the elements match. If using a predicate function, the function is executed in the context of the selected element, so `this` refers to the current element.\n\n\n### Traversing\n\n#### .find(selector)\nGet a set of descendants filtered by `selector` of each element in the current set of matched elements.\n\n```js\n$(\'#fruits\').find(\'li\').length\n//=> 3\n```\n\n#### .parent([selector])\nGet the parent of each element in the current set of matched elements, optionally filtered by a selector.\n\n```js\n$(\'.pear\').parent().attr(\'id\')\n//=> fruits\n```\n\n#### .parents([selector])\nGet a set of parents filtered by `selector` of each element in the current set of match elements.\n```js\n$(\'.orange\').parents().length\n// => 2\n$(\'.orange\').parents(\'#fruits\').length\n// => 1\n```\n\n#### .parentsUntil([selector][,filter])\nGet the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or cheerio object.\n```js\n$(\'.orange\').parentsUntil(\'#food\').length\n// => 1\n```\n\n#### .closest(selector)\nFor each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\n```js\n$(\'.orange\').closest()\n// => []\n$(\'.orange\').closest(\'.apple\')\n// => []\n$(\'.orange\').closest(\'li\')\n// => [<li class="orange">Orange</li>]\n$(\'.orange\').closest(\'#fruits\')\n// => [<ul id="fruits"> ... </ul>]\n```\n\n#### .next([selector])\nGets the next sibling of the first selected element, optionally filtered by a selector.\n\n```js\n$(\'.apple\').next().hasClass(\'orange\')\n//=> true\n```\n\n#### .nextAll()\nGets all the following siblings of the first selected element.\n\n```js\n$(\'.apple\').nextAll()\n//=> [<li class="orange">Orange</li>, <li class="pear">Pear</li>]\n```\n\n#### .nextUntil()\nGets all the following siblings up to but not including the element matched by the selector.\n\n```js\n$(\'.apple\').nextUntil(\'.pear\')\n//=> [<li class="orange">Orange</li>]\n```\n\n#### .prev([selector])\nGets the previous sibling of the first selected element optionally filtered by a selector.\n\n```js\n$(\'.orange\').prev().hasClass(\'apple\')\n//=> true\n```\n\n#### .prevAll()\nGets all the preceding siblings of the first selected element.\n\n```js\n$(\'.pear\').prevAll()\n//=> [<li class="orange">Orange</li>, <li class="apple">Apple</li>]\n```\n\n#### .prevUntil()\nGets all the preceding siblings up to but not including the element matched by the selector.\n\n```js\n$(\'.pear\').prevUntil(\'.apple\')\n//=> [<li class="orange">Orange</li>]\n```\n\n#### .slice( start, [end] )\nGets the elements matching the specified range\n\n```js\n$(\'li\').slice(1).eq(0).text()\n//=> \'Orange\'\n\n$(\'li\').slice(1, 2).length\n//=> 1\n```\n\n#### .siblings( selector )\nGets the first selected element\'s siblings, excluding itself.\n\n```js\n$(\'.pear\').siblings().length\n//=> 2\n\n$(\'.pear\').siblings(\'.orange\').length\n//=> 1\n\n```\n\n#### .children( selector )\nGets the children of the first selected element.\n\n```js\n$(\'#fruits\').children().length\n//=> 3\n\n$(\'#fruits\').children(\'.pear\').text()\n//=> Pear\n```\n\n#### .contents()\nGets the children of each element in the set of matched elements, including text and comment nodes.\n\n```js\n$(\'#fruits\').contents().length\n//=> 3\n```\n\n#### .each( function(index, element) )\nIterates over a cheerio object, executing a function for each matched element. When the callback is fired, the function is fired in the context of the DOM element, so `this` refers to the current element, which is equivalent to the function parameter `element`. To break out of the `each` loop early, return with `false`.\n\n```js\nvar fruits = [];\n\n$(\'li\').each(function(i, elem) {\n  fruits[i] = $(this).text();\n});\n\nfruits.join(\', \');\n//=> Apple, Orange, Pear\n```\n\n#### .map( function(index, element) )\nPass each element in the current matched set through a function, producing a new Cheerio object containing the return values. The function can return an individual data item or an array of data items to be inserted into the resulting set. If an array is returned, the elements inside the array are inserted into the set. If the function returns null or undefined, no element will be inserted.\n\n```js\n$(\'li\').map(function(i, el) {\n  // this === el\n  return $(\'<div>\').text($(this).text());\n}).html();\n//=> <div>apple</div><div>orange</div><div>pear</div>\n```\n\n#### .filter( selector ) <br /> .filter( selection ) <br /> .filter( element ) <br /> .filter( function(index) )\n\nIterates over a cheerio object, reducing the set of selector elements to those that match the selector or pass the function\'s test. When a Cheerio selection is specified, return only the elements contained in that selection. When an element is specified, return only that element (if it is contained in the original selection). If using the function method, the function is executed in the context of the selected element, so `this` refers to the current element.\n\nSelector:\n\n```js\n$(\'li\').filter(\'.orange\').attr(\'class\');\n//=> orange\n```\n\nFunction:\n\n```js\n$(\'li\').filter(function(i, el) {\n  // this === el\n  return $(this).attr(\'class\') === \'orange\';\n}).attr(\'class\')\n//=> orange\n```\n\n#### .first()\nWill select the first element of a cheerio object\n\n```js\n$(\'#fruits\').children().first().text()\n//=> Apple\n```\n\n#### .last()\nWill select the last element of a cheerio object\n\n```js\n$(\'#fruits\').children().last().text()\n//=> Pear\n```\n\n#### .eq( i )\nReduce the set of matched elements to the one at the specified index. Use `.eq(-i)` to count backwards from the last selected element.\n\n```js\n$(\'li\').eq(0).text()\n//=> Apple\n\n$(\'li\').eq(-1).text()\n//=> Pear\n```\n\n#### .get( [i] )\n\nRetrieve the DOM elements matched by the Cheerio object. If an index is specified, retrieve one of the elements matched by the Cheerio object:\n\n```js\n$(\'li\').get(0).name\n//=> li\n```\n\nIf no index is specified, retrieve all elements matched by the Cheerio object:\n\n```js\n$(\'li\').get().length\n//=> 3\n```\n\n#### .end()\nEnd the most recent filtering operation in the current chain and return the set of matched elements to its previous state.\n\n```js\n$(\'li\').eq(0).end().length\n//=> 3\n```\n\n#### .add( selector [, context] )\n#### .add( element )\n#### .add( elements )\n#### .add( html )\n#### .add( selection )\nAdd elements to the set of matched elements.\n\n```js\n$(\'.apple\').add(\'.orange\').length\n//=> 2\n```\n\n### Manipulation\nMethods for modifying the DOM structure.\n\n#### .append( content, [content, ...] )\nInserts content as the *last* child of each of the selected elements.\n\n```js\n$(\'ul\').append(\'<li class="plum">Plum</li>\')\n$.html()\n//=>  <ul id="fruits">\n//      <li class="apple">Apple</li>\n//      <li class="orange">Orange</li>\n//      <li class="pear">Pear</li>\n//      <li class="plum">Plum</li>\n//    </ul>\n```\n\n#### .prepend( content, [content, ...] )\nInserts content as the *first* child of each of the selected elements.\n\n```js\n$(\'ul\').prepend(\'<li class="plum">Plum</li>\')\n$.html()\n//=>  <ul id="fruits">\n//      <li class="plum">Plum</li>\n//      <li class="apple">Apple</li>\n//      <li class="orange">Orange</li>\n//      <li class="pear">Pear</li>\n//    </ul>\n```\n\n#### .after( content, [content, ...] )\nInsert content next to each element in the set of matched elements.\n\n```js\n$(\'.apple\').after(\'<li class="plum">Plum</li>\')\n$.html()\n//=>  <ul id="fruits">\n//      <li class="apple">Apple</li>\n//      <li class="plum">Plum</li>\n//      <li class="orange">Orange</li>\n//      <li class="pear">Pear</li>\n//    </ul>\n```\n\n#### .before( content, [content, ...] )\nInsert content previous to each element in the set of matched elements.\n\n```js\n$(\'.apple\').before(\'<li class="plum">Plum</li>\')\n$.html()\n//=>  <ul id="fruits">\n//      <li class="plum">Plum</li>\n//      <li class="apple">Apple</li>\n//      <li class="orange">Orange</li>\n//      <li class="pear">Pear</li>\n//    </ul>\n```\n\n#### .remove( [selector] )\nRemoves the set of matched elements from the DOM and all their children. `selector` filters the set of matched elements to be removed.\n\n```js\n$(\'.pear\').remove()\n$.html()\n//=>  <ul id="fruits">\n//      <li class="apple">Apple</li>\n//      <li class="orange">Orange</li>\n//    </ul>\n```\n\n#### .replaceWith( content )\nReplaces matched elements with `content`.\n\n```js\nvar plum = $(\'<li class="plum">Plum</li>\')\n$(\'.pear\').replaceWith(plum)\n$.html()\n//=> <ul id="fruits">\n//     <li class="apple">Apple</li>\n//     <li class="orange">Orange</li>\n//     <li class="plum">Plum</li>\n//   </ul>\n```\n\n#### .empty()\nEmpties an element, removing all it\'s children.\n\n```js\n$(\'ul\').empty()\n$.html()\n//=>  <ul id="fruits"></ul>\n```\n\n#### .html( [htmlString] )\nGets an html content string from the first selected element. If `htmlString` is specified, each selected element\'s content is replaced by the new content.\n\n```js\n$(\'.orange\').html()\n//=> Orange\n\n$(\'#fruits\').html(\'<li class="mango">Mango</li>\').html()\n//=> <li class="mango">Mango</li>\n```\n\n#### .text( [textString] )\nGet the combined text contents of each element in the set of matched elements, including their descendants.. If `textString` is specified, each selected element\'s content is replaced by the new text content.\n\n```js\n$(\'.orange\').text()\n//=> Orange\n\n$(\'ul\').text()\n//=>  Apple\n//    Orange\n//    Pear\n```\n\n#### .css( [propertName] ) <br /> .css( [ propertyNames] ) <br /> .css( [propertyName], [value] ) <br /> .css( [propertName], [function] ) <br /> .css( [properties] )\n\nGet the value of a style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\n\n### Rendering\nWhen you\'re ready to render the document, you can use the `html` utility function:\n\n```js\n$.html()\n//=>  <ul id="fruits">\n//      <li class="apple">Apple</li>\n//      <li class="orange">Orange</li>\n//      <li class="pear">Pear</li>\n//    </ul>\n```\n\nIf you want to return the outerHTML you can use `$.html(selector)`:\n\n```js\n$.html(\'.pear\')\n//=> <li class="pear">Pear</li>\n```\n\nBy default, `html` will leave some tags open. Sometimes you may instead want to render a valid XML document. For example, you might parse the following XML snippet:\n\n```xml\n$ = cheerio.load(\'<media:thumbnail url="http://www.foo.com/keyframe.jpg" width="75" height="50" time="12:05:01.123"/>\');\n```\n\n... and later want to render to XML. To do this, you can use the \'xml\' utility function:\n\n```js\n$.xml()\n//=>  <media:thumbnail url="http://www.foo.com/keyframe.jpg" width="75" height="50" time="12:05:01.123"/>\n```\n\n\n### Miscellaneous\nDOM element methods that don\'t fit anywhere else\n\n#### .clone() ####\nClone the cheerio object.\n\n```js\nvar moreFruit = $(\'#fruits\').clone()\n```\n\n### Utilities\n\n#### $.root\n\nSometimes you need to work with the top-level root element. To query it, you can use `$.root()`.\n\n```js\n$.root().append(\'<ul id="vegetables"></ul>\').html();\n//=> <ul id="fruits">...</ul><ul id="vegetables"></ul>\n```\n\n#### $.contains( container, contained )\nChecks to see if the `contained` DOM element is a descendent of the `container` DOM element.\n\n#### $.parseHTML( data [, context ] [, keepScripts ] )\nParses a string into an array of DOM nodes. The `context` argument has no meaning for Cheerio, but it is maintained for API compatability.\n\n## Screencasts\n\nhttp://vimeo.com/31950192\n\n> This video tutorial is a follow-up to Nettut\'s "How to Scrape Web Pages with Node.js and jQuery", using cheerio instead of JSDOM + jQuery. This video shows how easy it is to use cheerio and how much faster cheerio is than JSDOM + jQuery.\n\n## Test Coverage\n\nCheerio has high-test coverage, you can view the report [here](https://s3.amazonaws.com/MattMueller/Coverage/cheerio.html).\n\n## Testing\n\nTo run the test suite, download the repository, then within the cheerio directory, run:\n\n```shell\nmake setup\nmake test\n```\n\nThis will download the development packages and run the test suite.\n\n## Contributors\n\nThese are some of the contributors that have made cheerio possible:\n\n```\nproject  : cheerio\n repo age : 2 years, 6 months\n active   : 285 days\n commits  : 762\n files    : 36\n authors  :\n   293  Matt Mueller            38.5%\n   133  Matthew Mueller         17.5%\n    92  Mike Pennisi            12.1%\n    54  David Chambers          7.1%\n    30  kpdecker                3.9%\n    19  Felix Böhm             2.5%\n    17  fb55                    2.2%\n    15  Siddharth Mahendraker   2.0%\n    11  Adam Bretz              1.4%\n     8  Nazar Leush             1.0%\n     7  ironchefpython          0.9%\n     6  Jarno Leppänen         0.8%\n     5  Ben Sheldon             0.7%\n     5  Jos Shepherd            0.7%\n     5  Ryan Schmukler          0.7%\n     5  Steven Vachon           0.7%\n     4  Maciej Adwent           0.5%\n     4  Amir Abu Shareb         0.5%\n     3  jeremy.dentel@brandingbrand.com 0.4%\n     3  Andi Neck               0.4%\n     2  steve                   0.3%\n     2  alexbardas              0.3%\n     2  finspin                 0.3%\n     2  Ali Farhadi             0.3%\n     2  Chris Khoo              0.3%\n     2  Rob Ashton              0.3%\n     2  Thomas Heymann          0.3%\n     2  Jaro Spisak             0.3%\n     2  Dan Dascalescu          0.3%\n     2  Torstein Thune          0.3%\n     2  Wayne Larsen            0.3%\n     1  Timm Preetz             0.1%\n     1  Xavi                    0.1%\n     1  Alex Shaindlin          0.1%\n     1  mattym                  0.1%\n     1  Felix Böhm            0.1%\n     1  Farid Neshat            0.1%\n     1  Dmitry Mazuro           0.1%\n     1  Jeremy Hubble           0.1%\n     1  nevermind               0.1%\n     1  Manuel Alabor           0.1%\n     1  Matt Liegey             0.1%\n     1  Chris O\'Hara            0.1%\n     1  Michael Holroyd         0.1%\n     1  Michiel De Mey          0.1%\n     1  Ben Atkin               0.1%\n     1  Rich Trott              0.1%\n     1  Rob "Hurricane" Ashton  0.1%\n     1  Robin Gloster           0.1%\n     1  Simon Boudrias          0.1%\n     1  Sindre Sorhus           0.1%\n     1  xiaohwan                0.1%\n```\n\n## Special Thanks\n\nThis library stands on the shoulders of some incredible developers. A special thanks to:\n\n__&#8226; @FB55 for node-htmlparser2 & CSSSelect:__\nFelix has a knack for writing speedy parsing engines. He completely re-wrote both @tautologistic\'s `node-htmlparser` and @harry\'s `node-soupselect` from the ground up, making both of them much faster and more flexible. Cheerio would not be possible without his foundational work\n\n__&#8226; @jQuery team for jQuery:__\nThe core API is the best of its class and despite dealing with all the browser inconsistencies the code base is extremely clean and easy to follow. Much of cheerio\'s implementation and documentation is from jQuery. Thanks guys.\n\n__&#8226; @visionmedia:__\nThe style, the structure, the open-source"-ness" of this library comes from studying TJ\'s style and using many of his libraries. This dude consistently pumps out high-quality libraries and has always been more than willing to help or answer questions. You rock TJ.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Matt Mueller &lt;mattmuelle@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
66 silly resolved     readmeFilename: 'Readme.md',
66 silly resolved     bugs: { url: 'https://github.com/MatthewMueller/cheerio/issues' },
66 silly resolved     homepage: 'https://github.com/MatthewMueller/cheerio',
66 silly resolved     _id: 'cheerio@0.17.0',
66 silly resolved     _from: 'cheerio@' } ]
67 info install request@2.40.0 into /usr/local/lib
68 info install cheerio@0.17.0 into /usr/local/lib
69 info installOne request@2.40.0
70 info installOne cheerio@0.17.0
71 info /usr/local/lib/node_modules/request unbuild
72 info /usr/local/lib/node_modules/cheerio unbuild
73 verbose tar unpack /Users/Sophie/.npm/request/2.40.0/package.tgz
74 silly lockFile badd5118-r-local-lib-node-modules-request tar:///usr/local/lib/node_modules/request
75 verbose lock tar:///usr/local/lib/node_modules/request /Users/Sophie/.npm/badd5118-r-local-lib-node-modules-request.lock
76 silly lockFile f92be787-e-npm-request-2-40-0-package-tgz tar:///Users/Sophie/.npm/request/2.40.0/package.tgz
77 verbose lock tar:///Users/Sophie/.npm/request/2.40.0/package.tgz /Users/Sophie/.npm/f92be787-e-npm-request-2-40-0-package-tgz.lock
78 verbose tar unpack /Users/Sophie/.npm/cheerio/0.17.0/package.tgz
79 silly lockFile 7d4976a9-r-local-lib-node-modules-cheerio tar:///usr/local/lib/node_modules/cheerio
80 verbose lock tar:///usr/local/lib/node_modules/cheerio /Users/Sophie/.npm/7d4976a9-r-local-lib-node-modules-cheerio.lock
81 silly lockFile 1e5669c2-e-npm-cheerio-0-17-0-package-tgz tar:///Users/Sophie/.npm/cheerio/0.17.0/package.tgz
82 verbose lock tar:///Users/Sophie/.npm/cheerio/0.17.0/package.tgz /Users/Sophie/.npm/1e5669c2-e-npm-cheerio-0-17-0-package-tgz.lock
83 silly gunzTarPerm modes [ '755', '644' ]
84 error Error: EACCES, mkdir '/usr/local/lib/node_modules/request'
84 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/request']
84 error   errno: 3,
84 error   code: 'EACCES',
84 error   path: '/usr/local/lib/node_modules/request',
84 error   fstream_type: 'Directory',
84 error   fstream_path: '/usr/local/lib/node_modules/request',
84 error   fstream_class: 'DirWriter',
84 error   fstream_stack:
84 error    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
84 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
84 error      'Object.oncomplete (fs.js:107:15)' ] }
85 error Please try running this command again as root/Administrator.
86 error System Darwin 12.5.0
87 error command "node" "/usr/local/bin/npm" "-g" "install" "request" "cheerio"
88 error cwd /Users/Sophie/Development/tryit/tryit/ingredients-match
89 error node -v v0.10.24
90 error npm -v 1.3.21
91 error path /usr/local/lib/node_modules/request
92 error fstream_path /usr/local/lib/node_modules/request
93 error fstream_type Directory
94 error fstream_class DirWriter
95 error code EACCES
96 error errno 3
97 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/request'
98 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
98 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
98 error fstream_stack Object.oncomplete (fs.js:107:15)
99 verbose exit [ 3, true ]
